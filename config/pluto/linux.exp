#!/usr/bin/expect

set ttyUSB [lindex $argv 0]

set timeout 50

proc send_screen_quit_cmd {} {
    # Send Ctrl-A to screen
    send "\x01"
    send ":quit\r"
}

proc wait_for_text { wait_txt } {
	while 1 {
		expect {
		$wait_txt {
			break
		}
		timeout {
		    send_error "Failed while waiting for '$wait_txt'\n"
		    exit 1
		}
	    }
	}
}

proc wait_for_prompt { wait_cmd } {
	set multiPrompt {[#$] }

	while 1 {
		expect {
		-re $multiPrompt {
			break
		}
		timeout {
		    send_error "Failed to get Linux prompt after '$wait_cmd'\n"
		    exit 1
		}
		}
	}
}

proc send_wait_for_prompt { cmd } {
	send $cmd
	wait_for_prompt $cmd
}

proc wait_for_value_in_range { min max units } {
	while 1 {
		expect {
		-re "\[0-9]{3,4}" {
			set in $expect_out(0,string)

			if { $in < $min } {
				send_error "Value ($in) below limit $min $units\n"
				exit 1
			}

			if { $in > $max } {
				send_error "Value ($in) above limit $max $units\n"
				exit 1
			}

			break
		}
		timeout {
			send_error "Failed to read value in range '$min - $max $units'\n"
			exit 1
		}
		}
	}
}

############### Check Host Side ################

spawn bash

send "iio_info -s\r"

wait_for_text "0456:b673"

########## Done Check Host Side ################

spawn sshpass -panalog ssh -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -oCheckHostIP=no root@192.168.2.1
set screen_id $spawn_id
set multiPrompt {[#$] }

set timeout 10

wait_for_prompt "ssh"

############### Check IIO device probing ################

send "grep '' /sys/bus/iio/devices/iio\:device*/name | wc -l\r"
# Expect 5

while 1 {
	expect {
	-re "5.*$multiPrompt" {
		break
	}
        timeout {
	    send_error "Failed to find 5 IIO devices\n"
            exit 1
        }
    }
}

############### Check ADM1177 ################

send "awk \"BEGIN{print \$(cat /sys/bus/iio/devices/iio\\:device0/in_voltage0_raw) * \$(cat /sys/bus/iio/devices/iio\\:device0/in_voltage0_scale)}\"\r"

# result is in mV, look for 4500 to 5200

wait_for_value_in_range 4500 5200 "mV"

send "awk \"BEGIN{print \$(cat /sys/bus/iio/devices/iio\\:device0/in_current0_raw) * \$(cat /sys/bus/iio/devices/iio\\:device0/in_current0_scale)}\"\r"

# result is in mA

wait_for_value_in_range 350 550 "mA"

############### Setup the extra environment ################

send_wait_for_prompt "echo /dev/mtd0 0xff000 0x1000 0x1000 > /var/fw_env.conf\r"

#### Initially the extra env has a bad CRC - make sure we remove the defaults

send_wait_for_prompt "echo bootcmd > /var/fw.scr\r"

send_wait_for_prompt "echo baudrate >> /var/fw.scr\r"

send_wait_for_prompt "echo bootdelay >> /var/fw.scr\r"

send_wait_for_prompt "cat /etc/serial| xargs echo serial >> /var/fw.scr\r"

send_wait_for_prompt "cat /etc/serial | xargs echo PlutoSDR_by_Analog_Devices_Inc! | sha1sum | cut -f 0 -d ' ' > pkey; cat pkey | xargs echo productkey >> /var/fw.scr\r"

############### Compute and set actual frequency here ################

set cmd "echo -n 'ad936x_ext_refclk <' >> /var/fw.scr;"
set cmd "$cmd echo -n $\(cat /sys/bus/iio/devices/iio:device1/xo_correction\) >> /var/fw.scr;"
set cmd "$cmd echo '>' >> /var/fw.scr\r"

send_wait_for_prompt $cmd

send_wait_for_prompt "fw_setenv -c /var/fw_env.conf -s /var/fw.scr\r"

set timeout 20

send "device_reboot break\r"
sleep 1
close

if [ catch "spawn screen /dev/$ttyUSB 115200\r" reason ] {
        send_error "failed to spawn screen : $reason\n"
        exit 1
}

wait_for_text "Pluto>"

### Protect SF Flash now

send "sf probe; sf protect lock 0 0x100000\r"

wait_for_text "SF: Locked"

wait_for_text "Pluto>"

send "reset\r"
sleep 0.5

wait_for_text "pluto login:"

send_screen_quit_cmd
close

exit 0

